// This code is generated by generate_enum.py and should not be
// modified directly
#pragma once

#include <map>
#include <string>
#include "enums/enums_utils.hpp"


const std::map<const BF_RC, const std::string>& BF_RC_names();
template<> const std::map<const BF_RC, const std::string>& get_enum_names<enum BF_RC>() {
  return BF_RC_names();
};

template<> MODULE get_enum_module<enum BF_RC>() {
  return MODULE_BF;
}

const std::map<const FI_RC, const std::string>& FI_RC_names();
template<> const std::map<const FI_RC, const std::string>& get_enum_names<enum FI_RC>() {
  return FI_RC_names();
};

template<> MODULE get_enum_module<enum FI_RC>() {
  return MODULE_FI;
}

const std::map<const PR_RC, const std::string>& PR_RC_names();
template<> const std::map<const PR_RC, const std::string>& get_enum_names<enum PR_RC>() {
  return PR_RC_names();
};

template<> MODULE get_enum_module<enum PR_RC>() {
  return MODULE_PR;
}

const std::map<const PS_RC, const std::string>& PS_RC_names();
template<> const std::map<const PS_RC, const std::string>& get_enum_names<enum PS_RC>() {
  return PS_RC_names();
};

template<> MODULE get_enum_module<enum PS_RC>() {
  return MODULE_PS;
}

const std::map<const RROEA_RC, const std::string>& RROEA_RC_names();
template<> const std::map<const RROEA_RC, const std::string>& get_enum_names<enum RROEA_RC>() {
  return RROEA_RC_names();
};

template<> MODULE get_enum_module<enum RROEA_RC>() {
  return MODULE_RROEA;
}

const std::map<const RedoxReg_RC, const std::string>& RedoxReg_RC_names();
template<> const std::map<const RedoxReg_RC, const std::string>& get_enum_names<enum RedoxReg_RC>() {
  return RedoxReg_RC_names();
};

template<> MODULE get_enum_module<enum RedoxReg_RC>() {
  return MODULE_RedoxReg;
}

const std::map<const RuACT_RC, const std::string>& RuACT_RC_names();
template<> const std::map<const RuACT_RC, const std::string>& get_enum_names<enum RuACT_RC>() {
  return RuACT_RC_names();
};

template<> MODULE get_enum_module<enum RuACT_RC>() {
  return MODULE_RuACT;
}

const std::map<const SUCS_RC, const std::string>& SUCS_RC_names();
template<> const std::map<const SUCS_RC, const std::string>& get_enum_names<enum SUCS_RC>() {
  return SUCS_RC_names();
};

template<> MODULE get_enum_module<enum SUCS_RC>() {
  return MODULE_SUCS;
}

const std::map<const XanCycle_RC, const std::string>& XanCycle_RC_names();
template<> const std::map<const XanCycle_RC, const std::string>& get_enum_names<enum XanCycle_RC>() {
  return XanCycle_RC_names();
};

template<> MODULE get_enum_module<enum XanCycle_RC>() {
  return MODULE_XanCycle;
}

