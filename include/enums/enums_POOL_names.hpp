// This code is generated by generate_enum.py and should not be
// modified directly
#pragma once

#include <map>
#include <string>
#include "enums/enums_utils.hpp"


const std::map<const BF_POOL, const std::string>& BF_POOL_names();
template<> const std::map<const BF_POOL, const std::string>& get_enum_names<enum BF_POOL>() {
  return BF_POOL_names();
};

template<> MODULE get_enum_module<enum BF_POOL>() {
  return MODULE_BF;
}

const std::map<const FI_POOL, const std::string>& FI_POOL_names();
template<> const std::map<const FI_POOL, const std::string>& get_enum_names<enum FI_POOL>() {
  return FI_POOL_names();
};

template<> MODULE get_enum_module<enum FI_POOL>() {
  return MODULE_FI;
}

const std::map<const RROEA_POOL, const std::string>& RROEA_POOL_names();
template<> const std::map<const RROEA_POOL, const std::string>& get_enum_names<enum RROEA_POOL>() {
  return RROEA_POOL_names();
};

template<> MODULE get_enum_module<enum RROEA_POOL>() {
  return MODULE_RROEA;
}

const std::map<const RuACT_POOL, const std::string>& RuACT_POOL_names();
template<> const std::map<const RuACT_POOL, const std::string>& get_enum_names<enum RuACT_POOL>() {
  return RuACT_POOL_names();
};

template<> MODULE get_enum_module<enum RuACT_POOL>() {
  return MODULE_RuACT;
}

const std::map<const SUCS_POOL, const std::string>& SUCS_POOL_names();
template<> const std::map<const SUCS_POOL, const std::string>& get_enum_names<enum SUCS_POOL>() {
  return SUCS_POOL_names();
};

template<> MODULE get_enum_module<enum SUCS_POOL>() {
  return MODULE_SUCS;
}

