// This code is generated by generate_enum.py and should not be
// modified directly
#include "enums/enums_utils.hpp"

namespace ePhotosynthesis {
  template<>
  const std::vector<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf1   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf2   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf3   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf4   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf5   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf6   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf7   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf8   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf9   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf10  ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf11  ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vqi    ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vipc   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vicp   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vinc   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vinp   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vdp    ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vdc    ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vfp    ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vfc    ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vsfd   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VsATP  ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VgPQH2 ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JKc    ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JMgc   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JClc   ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf15  ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf16  ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vbfn2  ,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VsNADPH,
    ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vcet   
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf1   , "Vbf1"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf2   , "Vbf2"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf3   , "Vbf3"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf4   , "Vbf4"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf5   , "Vbf5"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf6   , "Vbf6"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf7   , "Vbf7"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf8   , "Vbf8"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf9   , "Vbf9"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf10  , "Vbf10"  },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf11  , "Vbf11"  },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vqi    , "Vqi"    },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vipc   , "Vipc"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vicp   , "Vicp"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vinc   , "Vinc"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vinp   , "Vinp"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vdp    , "Vdp"    },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vdc    , "Vdc"    },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vfp    , "Vfp"    },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vfc    , "Vfc"    },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vsfd   , "Vsfd"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VsATP  , "VsATP"  },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VgPQH2 , "VgPQH2" },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JKc    , "JKc"    },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JMgc   , "JMgc"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JClc   , "JClc"   },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf15  , "Vbf15"  },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf16  , "Vbf16"  },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vbfn2  , "vbfn2"  },
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VsNADPH, "VsNADPH"},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vcet   , "vcet"   }
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf1   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf2   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf3   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf4   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf5   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf6   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf7   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf8   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf9   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf10  , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf11  , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vqi    , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vipc   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vicp   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vinc   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vinp   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vdp    , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vdc    , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vfp    , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vfc    , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vsfd   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VsATP  , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VgPQH2 , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JKc    , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JMgc   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)JClc   , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf15  , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vbf16  , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vbfn2  , 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VsNADPH, 0.0},
    {ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vcet   , 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_BF_VEL& x) {
    out << ValueSetEnum<MODULE_BF, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::all = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::names = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::defaults = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_FIBF_VEL& x) {
    out << ValueSetEnum<MODULE_FIBF, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_d    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_f    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_U    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_A    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_f    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_d    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1      ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r1    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS1_S2  ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS2_S3  ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS3_S0  ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS0_S1  ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_1    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_1   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_1   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_1   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_1   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_2    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_2   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_2   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_2   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_2   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z     ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z     ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z     ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z     ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB1    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA1    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB2    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA2    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3      ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3_n    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3_n  ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_pq_ox ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ic      ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ia      ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_1    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_2    ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_1 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_1 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_1 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_2 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_2 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_2 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_1,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_1,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_1,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_1   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_2,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_2,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_2,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_2   ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680qU ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680qA ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_P680 ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680_d ,
    ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680_f 
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_d    , "vA_d"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_f    , "vA_f"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_U    , "vA_U"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_A    , "vU_A"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_f    , "vU_f"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_d    , "vU_d"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1      , "v1"      },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r1    , "v_r1"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS1_S2  , "vS1_S2"  },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS2_S3  , "vS2_S3"  },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS3_S0  , "vS3_S0"  },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS0_S1  , "vS0_S1"  },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_1    , "vz_1"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_1   , "v1z_1"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_1   , "v2z_1"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_1   , "v3z_1"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_1   , "v0z_1"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_2    , "vz_2"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_2   , "v1z_2"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_2   , "v2z_2"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_2   , "v3z_2"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_2   , "v0z_2"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z     , "v1z"     },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z     , "v2z"     },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z     , "v3z"     },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z     , "v0z"     },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB1    , "vAB1"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA1    , "vBA1"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB2    , "vAB2"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA2    , "vBA2"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3      , "v3"      },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3    , "v_r3"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3_n    , "v3_n"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3_n  , "v_r3_n"  },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_pq_ox , "v_pq_ox" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ic      , "Ic"      },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ia      , "Ia"      },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_1    , "v2_1"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_2    , "v2_2"    },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_1 , "v2_00_1" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_1 , "v2_01_1" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_1 , "v2_02_1" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_2 , "v2_00_2" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_2 , "v2_01_2" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_2 , "v2_02_2" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_1, "vr2_00_1"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_1, "vr2_01_1"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_1, "vr2_02_1"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_1   , "vr2_1"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_2, "vr2_00_2"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_2, "vr2_01_2"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_2, "vr2_02_2"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_2   , "vr2_2"   },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680qU , "vP680qU" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680qA , "vP680qA" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_P680 , "vU_P680" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680_d , "vP680_d" },
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680_f , "vP680_f" }
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_d    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_f    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_U    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_A    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_f    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_d    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1      , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r1    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS1_S2  , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS2_S3  , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS3_S0  , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS0_S1  , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_1    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_1   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_1   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_1   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_1   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_2    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_2   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_2   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_2   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_2   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z     , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z     , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z     , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z     , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB1    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA1    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB2    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA2    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3      , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3_n    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3_n  , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_pq_ox , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ic      , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ia      , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_1    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_2    , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_1 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_1 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_1 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_2 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_2 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_2 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_1, 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_1, 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_1, 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_1   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_2, 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_2, 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_2, 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_2   , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680qU , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680qA , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_P680 , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680_d , 0.0},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vP680_f , 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::docs = {
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_d    , "vA_d  The rate of heat dissipation from peripheral antenna"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_f    , "vA_f  The rate of fluorescence emission from peripheral antenna"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vA_U    , "vA_U  The rate of exciton transfer from peripheral antenna to core antenna in open reaction center"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_A    , "vU_A  The rate of exciton transfer from core antenna to perpheral antenna in open center"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_f    , "vU_f  The rate of fluorescence emission from core antenna"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vU_d    , "vU_d  The rate of heat dissipation from core antenna"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1      , "v1  The rate of primary charge separation"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r1    , "v_r1  The rate of charge recombination"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS1_S2  , "vS1_S2  The rate of transition from S1 to S2"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS2_S3  , "vS2_S3  The rate of transition from S2 to S3"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS3_S0  , "vS3_S0  The rate of transition from S3 to S0"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vS0_S1  , "vS0_S1  The rate of transition from S0 to S1"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_1    , "vz_1  The rate of P680p reduction"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_1   , "v1z_1  The rate of oxidation of S1T by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_1   , "v2z_1  The rate of oxidation of S2T  by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_1   , "v3z_1  The rate of oxidation of S3T  by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_1   , "v0z_1  The rate of oxidation of S0T  by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vz_2    , "vz_2  The rate of P680pPheon reduction"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1z_2   , "v1z_2  The rate of oxidation of S1T by P680pPheo"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2z_2   , "v2z_2  The rate of oxidation of S2T  by P680pPheo"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3z_2   , "v3z_2  The rate of oxidation of S3T  by P680pPheo"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v0z_2   , "v0z_2  The rate of oxidation of S0T  by P680pPheo"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB1    , "vAB1  The rate of electron transfer from QA- to QB"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA1    , "vBA1  The rate of electron transfer from QB- to QA"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vAB2    , "vAB2  The rate of electron transfer from QA- to QB-"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vBA2    , "vBA2  The rate of electron transfer from QB2- TO QA"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3      , "v3  The rate of exchange of QAQBH2 with PQ"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3    , "v_r3  The rate of exchange of QAQB with PQH2"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3_n    , "v3_n  The rate of exchange of QAnQBH2 with PQ"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_r3_n  , "v_r3_n  The rate of exchange of QAnQB with PQH2"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v_pq_ox , "v_pq_ox  The rate of PQH2 oxidation"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ic      , "Ic  The incident light on the core antenna"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Ia      , "Ia  The incident light on the peripheral antenna"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_1    , "v2_1  The rate of P680pPheon oxidation"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_2    , "v2_1  The rate of P680pPheon oxidation"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_1 , "v2_00_1  The rate of reduction of QAQB by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_1 , "v2_01_1  The rate of reduction of QAQBn by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_1 , "v2_02_1  The rate of reduction of QAQB2n by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_00_2 , "v2_00_2  The rate of reduction of QAQB by P680Pheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_01_2 , "v2_01_2  The rate of reduction of QAQBn by P680Pheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2_02_2 , "v2_02_2  The rate of reduction of QAQB2n by P680Pheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_1, "vr2_00_1  The reverse reaction of The rate of reduction of QAQB by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_1, "vr2_01_1  The reverse reaction of The rate of reduction of QAQBn by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_1, "vr2_02_1  The reverse reaction of The rate of reduction of QAQB2n by P680pPheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_00_2, "vr2_00_2  The reverse reaction of The rate of reduction of QAQB by P680Pheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_01_2, "vr2_01_2  The reverse reaction of The rate of reduction of QAQBn by P680Pheon"},
    {ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vr2_02_2, "vr2_02_2  The reverse reaction of The rate of reduction of QAQB2n by P680Pheon"}
  };
  template<>
  std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_FI_VEL& x) {
    out << ValueSetEnum<MODULE_FI, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v111 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v112 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v113 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v121 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v122 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v123 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v124 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v131 ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1in ,
    ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2out
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v111 , "v111" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v112 , "v112" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v113 , "v113" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v121 , "v121" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v122 , "v122" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v123 , "v123" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v124 , "v124" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v131 , "v131" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1in , "v1in" },
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2out, "v2out"}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v111 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v112 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v113 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v121 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v122 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v123 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v124 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v131 , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1in , 0.0},
    {ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2out, 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_PR_VEL& x) {
    out << ValueSetEnum<MODULE_PR, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v4 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v5 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v7 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v8 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v9 ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v10,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v13,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v16,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v23,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v31,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v32,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v33,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Pi ,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v24,
    ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v25
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1 , "v1" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2 , "v2" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3 , "v3" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v4 , "v4" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v5 , "v5" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6 , "v6" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v7 , "v7" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v8 , "v8" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v9 , "v9" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v10, "v10"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v13, "v13"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v16, "v16"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v23, "v23"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v31, "v31"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v32, "v32"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v33, "v33"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Pi , "Pi" },
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v24, "v24"},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v25, "v25"}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v2 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v3 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v4 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v5 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v7 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v8 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v9 , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v10, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v13, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v16, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v23, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v31, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v32, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v33, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Pi , 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v24, 0.0},
    {ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v25, 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_PS_VEL& x) {
    out << ValueSetEnum<MODULE_PS, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2GAPDH   ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2FBPase  ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2SBPase  ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2PRK     ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2ATPase  ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2ATPGPP  ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2MDH     ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2Fd      ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)veFd2Thio  ,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)veFd2Calvin,
    ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2RuACT   
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2GAPDH   , "ve2GAPDH"   },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2FBPase  , "ve2FBPase"  },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2SBPase  , "ve2SBPase"  },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2PRK     , "ve2PRK"     },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2ATPase  , "ve2ATPase"  },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2ATPGPP  , "ve2ATPGPP"  },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2MDH     , "ve2MDH"     },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2Fd      , "ve2Fd"      },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)veFd2Thio  , "veFd2Thio"  },
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)veFd2Calvin, "veFd2Calvin"},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2RuACT   , "ve2RuACT"   }
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2GAPDH   , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2FBPase  , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2SBPase  , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2PRK     , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2ATPase  , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2ATPGPP  , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2MDH     , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2Fd      , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)veFd2Thio  , 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)veFd2Calvin, 0.0},
    {ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)ve2RuACT   , 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_RROEA_VEL& x) {
    out << ValueSetEnum<MODULE_RROEA, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vred,
    ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vox 
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vred, "Vred"},
    {ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vox , "Vox" }
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vred, 0.0},
    {ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vox , 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_RedoxReg_VEL& x) {
    out << ValueSetEnum<MODULE_RedoxReg, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1  ,
    ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vn1 ,
    ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v7  ,
    ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vn7 ,
    ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6_1,
    ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6_2
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1  , "v1"  },
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vn1 , "vn1" },
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v7  , "v7"  },
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vn7 , "vn7" },
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6_1, "v6_1"},
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6_2, "v6_2"}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v1  , 0.0},
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vn1 , 0.0},
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v7  , 0.0},
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vn7 , 0.0},
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6_1, 0.0},
    {ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v6_2, 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::docs = {};
  template<>
  std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_RuACT_VEL& x) {
    out << ValueSetEnum<MODULE_RuACT, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v51     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v52     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v55     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v56     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v57     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v58     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v59     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v60     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v61     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v62     ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vdhap_in,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vgap_in ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_in ,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_use,
    ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vatpf   
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v51     , "v51"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v52     , "v52"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v55     , "v55"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v56     , "v56"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v57     , "v57"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v58     , "v58"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v59     , "v59"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v60     , "v60"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v61     , "v61"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v62     , "v62"     },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vdhap_in, "vdhap_in"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vgap_in , "vgap_in" },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_in , "vpga_in" },
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_use, "vpga_use"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vatpf   , "vatpf"   }
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v51     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v52     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v55     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v56     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v57     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v58     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v59     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v60     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v61     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v62     , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vdhap_in, 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vgap_in , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_in , 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_use, 0.0},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vatpf   , 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::docs = {
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v51     , "DHAP+GAP --FBP"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v52     , "FBP --F6P + Pi"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v55     , "G1P+UTP --OPOP+UDPG"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v56     , "UDPG+F6P--SUCP + UDP"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v57     , "SUCP--Pi + SUC"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v58     , "F26BP--F6P + Pi"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v59     , "F6P + ATP --ADP + F26BP"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v60     , "ATP+UDP --UTP + ADP"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v61     , "POPO --2PO"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)v62     , "SUC SINK"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vdhap_in, "DHAP IN"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vgap_in , "GAP Export from chloroplast"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_in , "PGA export from chloroplast"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vpga_use, "PGA utilisation in chloroplast"},
    {ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)vatpf   , "ATP synthesis rate"}
  };
  template<>
  std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_SUCS_VEL& x) {
    out << ValueSetEnum<MODULE_SUCS, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
  template<>
  const std::vector<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::all = {
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vva   ,
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vaz   ,
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vza   ,
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vav   ,
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vvf   ,
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vv2ABA,
    ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VABAdg
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::names = {
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vva   , "Vva"   },
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vaz   , "Vaz"   },
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vza   , "Vza"   },
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vav   , "Vav"   },
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vvf   , "Vvf"   },
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vv2ABA, "Vv2ABA"},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VABAdg, "VABAdg"}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::defaults = {
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vva   , 0.0},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vaz   , 0.0},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vza   , 0.0},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vav   , 0.0},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vvf   , 0.0},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vv2ABA, 0.0},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VABAdg, 0.0}
  };
  template<>
  const std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, double> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::defaults_C3 = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::glymaids = {};
  template<>
  const std::map<std::string, typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::aliases = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, std::string> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::docs = {
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vva   , "The velocity of v to a conversion"},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vaz   , "The rate of A to z"},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vza   , "THe rate of z to a"},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vav   , "The rate of A to V"},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vvf   , "The rate of V formation"},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)Vv2ABA, "The rate of conversion from v to ABA."},
    {ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::SCOPED_ENUM_TYPE(Type)VABAdg, "The rate of ABA degradation"}
  };
  template<>
  std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::value_flags = {};
  template<>
  const std::map<typename ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::Type, int> ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::static_value_flags = {};
  std::ostream& operator<<(std::ostream& out, const ENUM_XanCycle_VEL& x) {
    out << ValueSetEnum<MODULE_XanCycle, PARAM_TYPE_VEL>::getName(x);
    return out;
  };
}

