//This code is generated by generate_enum.py and should not be 
//modified directly
#include "enums/enums_RC_defaults.hpp"

const std::map<const BF_RC, const double>& BF_RC_defaults() {
  static const std::map<const BF_RC, const double> map {
    {BF_RC_K1      , 1.0e6  },
    {BF_RC_K2      , 500.0  },
    {BF_RC_K3      , 5.0e7  },
    {BF_RC_K4      , 5.0e7  },
    {BF_RC_K5      , 5.0e7  },
    {BF_RC_K6      , 5.0e7  },
    {BF_RC_K7      , 1.0e4  },
    {BF_RC_K8      , 1000.0 },
    {BF_RC_K9      , 8.3e6  },
    {BF_RC_K10     , 8.0e8  },
    {BF_RC_Vmax11  , 6.0    },
    {BF_RC_Kqi     , 1.0e3  },
    {BF_RC_PK      , 3.6e-8 },
    {BF_RC_PMg     , 3.6e-8 },
    {BF_RC_PCl     , 1.8e-8 },
    {BF_RC_Kau     , 1.0e10 },
    {BF_RC_Kua     , 1.0e10 },
    {BF_RC_Kf      , 6.3e6  },
    {BF_RC_Kd      , 2.0e8  },
    {BF_RC_K15     , 1.0e10 },
    {BF_RC_K16     , 1.0e5  },
    {BF_RC_Em_ISP  , 0.31   },
    {BF_RC_Em_Cytf , 0.27   },
    {BF_RC_Em_PG   , 0.35   },
    {BF_RC_MemCap  , 0.6e-6 },
    {BF_RC_RVA     , 8.0e-10},
    {BF_RC_KBs     , 1.1e-8 },
    {BF_RC_KBl     , 5.1e-6 },
    {BF_RC_KM1ATP  , 0.12   },
    {BF_RC_KM1ADP  , 0.014  },
    {BF_RC_KM1PI   , 0.3    },
    {BF_RC_KM2NADP , 0.05   },
    {BF_RC_KM2NADPH, 0.035  },
    {BF_RC_V2M     , 27.8   },
    {BF_RC_KE2     , 495.0  },
    {BF_RC_kA_d    , 1.0    },
    {BF_RC_kA_f    , 1.0    },
    {BF_RC_kA_U    , 20.0   },
    {BF_RC_kU_A    , 10.0   },
    {BF_RC_kU_d    , 2.0    },
    {BF_RC_kU_f    , 1.0    },
    {BF_RC_k1      , 1.0    },
    {BF_RC_k_r1    , 8.0    },
    {BF_RC_kz      , 38.0   },
    {BF_RC_k12     , 38.0   },
    {BF_RC_k23     , 1.0    },
    {BF_RC_k30     , 1.0    },
  };
  return map;
};

template<> const std::map<const BF_RC, const std::string>& get_enum_defaults<enum BF_RC>() {
  return BF_RC_defaults();
};

const std::map<const FI_RC, const double>& FI_RC_defaults() {
  static const std::map<const FI_RC, const double> map {
    {FI_RC_kA_d    , 2e8    },
    {FI_RC_kA_f    , 1.26e6 },
    {FI_RC_kA_U    , 1.0e10 },
    {FI_RC_kU_A    , 1.0e10 },
    {FI_RC_kU_d    , 2e8    },
    {FI_RC_kU_f    , 1.575e6},
    {FI_RC_k1      , 2.5e11 },
    {FI_RC_k_r1    , 3e8    },
    {FI_RC_kz      , 5e6    },
    {FI_RC_k12     , 30000  },
    {FI_RC_k23     , 10000  },
    {FI_RC_k30     , 3000   },
    {FI_RC_k01     , 500    },
    {FI_RC_k2      , 2e9    },
    {FI_RC_kAB1    , 2500   },
    {FI_RC_kBA1    , 200    },
    {FI_RC_kAB2    , 3300   },
    {FI_RC_kBA2    , 250    },
    {FI_RC_k3      , 800    },
    {FI_RC_k_r3    , 80     },
    {FI_RC_k_pq_oxy, 500    },
    {FI_RC_QBt     , 1      },
    {FI_RC_PQT     , 8      },
  };
  return map;
};

template<> const std::map<const FI_RC, const std::string>& get_enum_defaults<enum FI_RC>() {
  return FI_RC_defaults();
};

const std::map<const PR_RC, const double>& PR_RC_defaults() {
  static const std::map<const PR_RC, const double> map {
    {PR_RC_V111      , 0.24       },
    {PR_RC_V112      , 52.41992121},
    {PR_RC_V113      , 5.715787563},
    {PR_RC_V121      , 1.456108923},
    {PR_RC_V122      , 9.918572535},
    {PR_RC_V123      , 10.00978112},
    {PR_RC_V124      , 2.745819515},
    {PR_RC_V131      , 2.494745448},
    {PR_RC_NADHc     , 0.47       },
    {PR_RC_NADc      , 0.4        },
    {PR_RC_GLUc      , 24.        },
    {PR_RC_KGc       , 0.4        },
    {PR_RC_ADP       , 0.82       },
    {PR_RC_ATP       , 0.68       },
    {PR_RC_PGA       , 4.3        },
    {PR_RC_KO        , 0.222      },
    {PR_RC_KC        , 0.0115     },
    {PR_RC_KR        , 0.02       },
    {PR_RC_KM112     , 0.026      },
    {PR_RC_KI1122    , 94.0       },
    {PR_RC_KI1121    , 2.55       },
    {PR_RC_KM1131    , 0.21       },
    {PR_RC_KM1132    , 0.25       },
    {PR_RC_KI113     , 0.36       },
    {PR_RC_KE113     , 300.0      },
    {PR_RC_KM121     , 0.1        },
    {PR_RC_KM1221    , 0.15       },
    {PR_RC_KM1222    , 2.7        },
    {PR_RC_KI1221    , 33.0       },
    {PR_RC_KE122     , 0.24       },
    {PR_RC_KM123     , 0.09       },
    {PR_RC_KI123     , 12.0       },
    {PR_RC_KE123     , 2.5e5      },
    {PR_RC_KM1241    , 0.15       },
    {PR_RC_KM1242    , 1.7        },
    {PR_RC_KE124     , 607.0      },
    {PR_RC_KM1311    , 6.0        },
    {PR_RC_KI1311    , 4.0        },
    {PR_RC_V1T       , 5.0        },
    {PR_RC_KM1011    , 0.39       },
    {PR_RC_KI1011    , 0.28       },
    {PR_RC_V2T       , 6.4        },
    {PR_RC_KM1012    , 0.2        },
    {PR_RC_KI1012    , 0.22       },
    {PR_RC_Vfactor112, 1.0        },
    {PR_RC_Vfactor113, 1.0        },
    {PR_RC_Vfactor121, 1.0        },
    {PR_RC_Vfactor122, 1.0        },
    {PR_RC_Vfactor123, 1.0        },
    {PR_RC_Vfactor124, 1.0        },
    {PR_RC_Vfactor131, 1.0        },
    {PR_RC_Vf_T131   , 1.0        },
    {PR_RC_Vf_T113   , 1.0        },
    {PR_RC_Vf_T123   , 1.0        },
    {PR_RC_Vf_T121   , 1.0        },
    {PR_RC_Vf_T122   , 1.0        },
    {PR_RC_Vf_T112   , 1.0        },
  };
  return map;
};

template<> const std::map<const PR_RC, const std::string>& get_enum_defaults<enum PR_RC>() {
  return PR_RC_defaults();
};

const std::map<const PS_RC, const double>& PS_RC_defaults() {
  static const std::map<const PS_RC, const double> map {
    {PS_RC_CP       , 22.0              },
    {PS_RC_CA       , 1.5               },
    {PS_RC_CN       , 1.0               },
    {PS_RC_PEXT     , 0.5               },
    {PS_RC_V1       , 2.93              },
    {PS_RC_V2       , 30.15             },
    {PS_RC_V3       , 4.04              },
    {PS_RC_V5       , 1.22              },
    {PS_RC_V6       , 0.734             },
    {PS_RC_V7       , 12.48             },
    {PS_RC_V8       , 1.22              },
    {PS_RC_V9       , 0.96              },
    {PS_RC_V13      , 10.81             },
    {PS_RC_V16      , 5.47              },
    {PS_RC_V23      , 2.0               },
    {PS_RC_V24      , 2.0               },
    {PS_RC_V31      , 20.0              },
    {PS_RC_V32      , 1.0               },
    {PS_RC_V33      , 20.0              },
    {PS_RC_KM11_A   , 0.0097            },
    {PS_RC_KM12_A   , 0.244             },
    {PS_RC_KM13     , 0.02              },
    {PS_RC_KI11     , 0.84              },
    {PS_RC_KI12     , 0.04              },
    {PS_RC_KI13     , 0.075             },
    {PS_RC_KI14     , 0.9               },
    {PS_RC_KI15     , 0.07              },
    {PS_RC_KM21     , 0.240             },
    {PS_RC_KM22     , 0.390             },
    {PS_RC_KM23     , 0.23              },
    {PS_RC_KM31a    , 0.004             },
    {PS_RC_KM32b    , 0.1               },
    {PS_RC_KE4      , 0.05              },
    {PS_RC_KM51     , 0.3               },
    {PS_RC_KM52     , 0.4               },
    {PS_RC_KM53     , 0.02              },
    {PS_RC_KE5      , 7.100             },
    {PS_RC_KM61     , 0.033             },
    {PS_RC_KI61     , 0.7               },
    {PS_RC_KI62     , 12.               },
    {PS_RC_KE6      , 6.66e5            },
    {PS_RC_KM71     , 0.100             },
    {PS_RC_KM72     , 0.100             },
    {PS_RC_KM73     , 0.1               },
    {PS_RC_KM74     , 0.1000            },
    {PS_RC_KE7      , 10.               },
    {PS_RC_KM81     , 0.4               },
    {PS_RC_KM82     , 0.2               },
    {PS_RC_KE8      , 1.017             },
    {PS_RC_KM9      , 0.05              },
    {PS_RC_KI9      , 12.0              },
    {PS_RC_KE9      , 6.66e5            },
    {PS_RC_KM10     , 1.5               },
    {PS_RC_KM101    , 0.1               },
    {PS_RC_KM102    , 0.072             },
    {PS_RC_KM103    , 0.46              },
    {PS_RC_KE10     , 1.1764705882352942},
    {PS_RC_KE11     , 0.4               },
    {PS_RC_KE12     , 0.67              },
    {PS_RC_KM131    , 0.05              },
    {PS_RC_KM132    , 0.059             },
    {PS_RC_KI131    , 2.0               },
    {PS_RC_KI132    , 0.7               },
    {PS_RC_KI133    , 4.0               },
    {PS_RC_KI134    , 2.5               },
    {PS_RC_KI135    , 0.4               },
    {PS_RC_KE13     , 6.846e3           },
    {PS_RC_KM161    , 0.014             },
    {PS_RC_KM162    , 0.3               },
    {PS_RC_KM163    , 0.3               },
    {PS_RC_KE16     , 5.734             },
    {PS_RC_KE21     , 2.3               },
    {PS_RC_KE22     , 0.058             },
    {PS_RC_KM311    , 0.077             },
    {PS_RC_KM312    , 0.63              },
    {PS_RC_KM313    , 0.74              },
    {PS_RC_KM32     , 0.25              },
    {PS_RC_KM33     , 0.075             },
    {PS_RC_KM231    , 0.031             },
    {PS_RC_KM232    , 0.045             },
    {PS_RC_KM233    , 0.14              },
    {PS_RC_KM234    , 0.8               },
    {PS_RC_KE23     , 7.6e-3            },
    {PS_RC_KA231    , 0.23              },
    {PS_RC_KI231    , 0.9               },
    {PS_RC_KVmo     , 0.007             },
    {PS_RC_KM241    , 0.2               },
    {PS_RC_KE25     , 128.4             },
    {PS_RC_KE57     , 0.1005            },
    {PS_RC_Km8p5p   , 0.118             },
    {PS_RC_Km5p5p   , 0.616             },
    {PS_RC_KE810    , 0.8446            },
    {PS_RC_Km5gap   , 0.2727            },
    {PS_RC_Km8f6p   , 0.5443            },
    {PS_RC_Km8s7p   , 0.01576           },
    {PS_RC_Km8gap   , 0.09              },
    {PS_RC_MaxCoeff , 5.0               },
    {PS_RC_Vfactor1 , 1                 },
    {PS_RC_Vfactor2 , 1                 },
    {PS_RC_Vfactor3 , 1                 },
    {PS_RC_Vfactor5 , 1                 },
    {PS_RC_Vfactor7 , 1                 },
    {PS_RC_Vfactor13, 1                 },
    {PS_RC_Vfactor23, 1                 },
    {PS_RC_Vf_T3    , 1                 },
    {PS_RC_Vf_T2    , 1                 },
    {PS_RC_Vf_T1    , 1                 },
    {PS_RC_Vf_T6    , 1                 },
    {PS_RC_Vf_T5    , 1                 },
    {PS_RC_Vf_T9    , 1                 },
    {PS_RC_Vf_T13   , 1                 },
    {PS_RC_Vf_T23   , 1                 },
  };
  return map;
};

template<> const std::map<const PS_RC, const std::string>& get_enum_defaults<enum PS_RC>() {
  return PS_RC_defaults();
};

const std::map<const RROEA_RC, const double>& RROEA_RC_defaults() {
  static const std::map<const RROEA_RC, const double> map {
    {RROEA_RC_ke2GAPDH   , 22.        },
    {RROEA_RC_ke2MDH     , 20.        },
    {RROEA_RC_ke2FBPase  , 1.38       },
    {RROEA_RC_ke2SBPase  , 1.65       },
    {RROEA_RC_ke2PRK     , 59.8       },
    {RROEA_RC_ke2RubACT  , 6.35       },
    {RROEA_RC_ke2Fd      , 18.5       },
    {RROEA_RC_keFd2Thio  , 10         },
    {RROEA_RC_keFd2Calvin, 7          },
    {RROEA_RC_ke2ATPGPP  , 6.3        },
    {RROEA_RC_KEe2FBPase , 0.311167869},
    {RROEA_RC_KEe2SBPase , 0.459194309},
    {RROEA_RC_KEe2PRK    , 0.677638775},
    {RROEA_RC_KEe2ATPase , 2.177727336},
    {RROEA_RC_KEe2RuACT  , 0.677638775},
    {RROEA_RC_KEe2GAPDH  , 0.044461692},
    {RROEA_RC_KEe2MDH    , 0.044461692},
    {RROEA_RC_KEe2ATPGPP , 1.0        },
    {RROEA_RC_KEeFd2Thio , 24776.0    },
    {RROEA_RC_SA_GAPDH   , 620.0      },
    {RROEA_RC_SA_MDH     , 184.0      },
    {RROEA_RC_SA_PRK     , 410.0      },
    {RROEA_RC_SA_FBPase  , 119.0      },
    {RROEA_RC_SA_SBPase  , 70.0       },
    {RROEA_RC_SA_ATPGPP  , 10.0       },
    {RROEA_RC_SA_ATPase  , 100;       },
    {RROEA_RC_mw_GAPDH   , 147000.0   },
    {RROEA_RC_mw_MDH     , 87000.0    },
    {RROEA_RC_mw_PRK     , 40000.0    },
    {RROEA_RC_mw_FBPase  , 195000.0   },
    {RROEA_RC_mw_SBPase  , 66000.0    },
    {RROEA_RC_mw_ATPGPP  , 210000.0   },
    {RROEA_RC_mw_ATPase  , 500000.0   },
    {RROEA_RC_FdT        , 0.081      },
    {RROEA_RC_ThioT      , 0.081      },
    {RROEA_RC_RuACTT     , 0.0056     },
  };
  return map;
};

template<> const std::map<const RROEA_RC, const std::string>& get_enum_defaults<enum RROEA_RC>() {
  return RROEA_RC_defaults();
};

const std::map<const RedoxReg_RC, const double>& RedoxReg_RC_defaults() {
  static const std::map<const RedoxReg_RC, const double> map {
    {RedoxReg_RC_Fd_Thio_ET    , 500 },
    {RedoxReg_RC_ThioT         , 0.5 },
    {RedoxReg_RC_Thio_Oxidation, 0.1 },
    {RedoxReg_RC_Thion0        , 0.25},
  };
  return map;
};

template<> const std::map<const RedoxReg_RC, const std::string>& get_enum_defaults<enum RedoxReg_RC>() {
  return RedoxReg_RC_defaults();
};

const std::map<const RuACT_RC, const double>& RuACT_RC_defaults() {
  static const std::map<const RuACT_RC, const double> map {
    {RuACT_RC_k1 , 0.006  },
    {RuACT_RC_kn1, 1.6e-3 },
    {RuACT_RC_km1, 20e-6  },
    {RuACT_RC_Ke2, 0.1    },
    {RuACT_RC_Ke3, 1.600  },
    {RuACT_RC_k6 , 2.5    },
    {RuACT_RC_kc , 0.016  },
    {RuACT_RC_ko , 0.448  },
    {RuACT_RC_kr , 20.0e-3},
    {RuACT_RC_ET , 1.2    },
    {RuACT_RC_Rac, 0.0056 },
    {RuACT_RC_C  , 0.012  },
    {RuACT_RC_O  , 0.260  },
    {RuACT_RC_M  , 5.0    },
  };
  return map;
};

template<> const std::map<const RuACT_RC, const std::string>& get_enum_defaults<enum RuACT_RC>() {
  return RuACT_RC_defaults();
};

const std::map<const SUCS_RC, const double>& SUCS_RC_defaults() {
  static const std::map<const SUCS_RC, const double> map {
    {SUCS_RC_V51     , 0.107376831},
    {SUCS_RC_V52     , 0.063979048},
    {SUCS_RC_V55     , 0.115403205},
    {SUCS_RC_V56     , 0.055503446},
    {SUCS_RC_V57     , 0.55503446 },
    {SUCS_RC_V58     , 0.016819226},
    {SUCS_RC_V59     , 0.03       },
    {SUCS_RC_V62     , 2.0        },
    {SUCS_RC_Vdhap_in, 1.05       },
    {SUCS_RC_Vgap_in , 1.05       },
    {SUCS_RC_Vpga_in , 1.05       },
    {SUCS_RC_ATc     , 1.0        },
    {SUCS_RC_UTc     , 1.5        },
    {SUCS_RC_PTc     , 15.0       },
    {SUCS_RC_KE501   , 20.0       },
    {SUCS_RC_Km511   , 0.02       },
    {SUCS_RC_Km512   , 0.3        },
    {SUCS_RC_Km513   , 0.4        },
    {SUCS_RC_KE51    , 12.0       },
    {SUCS_RC_Km521   , 0.0025     },
    {SUCS_RC_KI521   , 0.7        },
    {SUCS_RC_KI522   , 12.0       },
    {SUCS_RC_KI523   , 7.0        },
    {SUCS_RC_KE52    , 6663.0     },
    {SUCS_RC_KE531   , 2.3        },
    {SUCS_RC_KE541   , 0.0584     },
    {SUCS_RC_Km551   , 0.14       },
    {SUCS_RC_Km552   , 0.1        },
    {SUCS_RC_Km553   , 0.11       },
    {SUCS_RC_Km554   , 0.12       },
    {SUCS_RC_KE55    , 0.31       },
    {SUCS_RC_Km561   , 0.8        },
    {SUCS_RC_Km562   , 2.4        },
    {SUCS_RC_KI561   , 0.7        },
    {SUCS_RC_KI562   , 0.8        },
    {SUCS_RC_KI563   , 0.4        },
    {SUCS_RC_KI564   , 11.0       },
    {SUCS_RC_KI565   , 50.0       },
    {SUCS_RC_KE56    , 10.0       },
    {SUCS_RC_Km571   , 0.35       },
    {SUCS_RC_Ki572   , 10.0       },
    {SUCS_RC_KE57    , 780.0      },
    {SUCS_RC_Km581   , 0.032      },
    {SUCS_RC_KI581   , 0.1        },
    {SUCS_RC_KI582   , 0.5        },
    {SUCS_RC_Km591   , 0.5        },
    {SUCS_RC_Km593   , 0.5        },
    {SUCS_RC_KI591   , 0.16       },
    {SUCS_RC_KE59    , 590.0      },
    {SUCS_RC_KE61    , 128.4      },
    {SUCS_RC_Km621   , 5.0        },
  };
  return map;
};

template<> const std::map<const SUCS_RC, const std::string>& get_enum_defaults<enum SUCS_RC>() {
  return SUCS_RC_defaults();
};

const std::map<const XanCycle_RC, const double>& XanCycle_RC_defaults() {
  static const std::map<const XanCycle_RC, const double> map {
    {XanCycle_RC_kva, 0.163},
    {XanCycle_RC_kaz, 0.691},
    {XanCycle_RC_kza, 0.119},
    {XanCycle_RC_kav, 0.119},
  };
  return map;
};

template<> const std::map<const XanCycle_RC, const std::string>& get_enum_defaults<enum XanCycle_RC>() {
  return XanCycle_RC_defaults();
};

